-- EXPLAIN ANALYZE for sql_fill_easy.sql
-- Query: SELECT id, subcategory, difficulty_band, pyq_frequency_score, stem, mcq_options, right_answer
FROM questions
WHERE difficulty_band = 'Easy' 
  AND pyq_frequency_score < 1.0
ORDER BY RANDOM() 
LIMIT 20

Limit  (cost=235.81..235.82 rows=3 width=463) (actual time=0.428..0.432 rows=20 loops=1)
  Output: id, subcategory, difficulty_band, pyq_frequency_score, stem, mcq_options, right_answer, (random())
  Buffers: shared hit=229
  ->  Sort  (cost=235.81..235.82 rows=3 width=463) (actual time=0.427..0.429 rows=20 loops=1)
        Output: id, subcategory, difficulty_band, pyq_frequency_score, stem, mcq_options, right_answer, (random())
        Sort Key: (random())
        Sort Method: quicksort  Memory: 36kB
        Buffers: shared hit=229
        ->  Seq Scan on public.questions  (cost=0.00..235.79 rows=3 width=463) (actual time=0.030..0.407 rows=21 loops=1)
              Output: id, subcategory, difficulty_band, pyq_frequency_score, stem, mcq_options, right_answer, random()
              Filter: ((questions.pyq_frequency_score < 1.0) AND (questions.difficulty_band = 'Easy'::text))
              Rows Removed by Filter: 431
              Buffers: shared hit=229
Query Identifier: 858560853472204776
Planning Time: 0.128 ms
Execution Time: 0.459 ms
