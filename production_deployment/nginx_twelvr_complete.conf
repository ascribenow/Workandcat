# Twelvr.com Complete Nginx Configuration with Hotpatch
# Add this to your existing twelvr.com server block

# 1) ROLLBACK SWITCH - One-line kill switch for hotpatch
map $http_x_hotpatch_off $hotpatch_off { 
    default 0; 
    "1" 1; 
}

# 2) RATE LIMITING - Protect backend from abuse
limit_req_zone $binary_remote_addr zone=api_rl:10m rate=10r/s;

server {
    listen 443 ssl http2;
    server_name twelvr.com;
    
    # 3) SECURITY HEADERS - Safe defaults
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    # CSP (adjust if needed)
    add_header Content-Security-Policy "default-src 'self'; connect-src 'self' https://twelvr.com https://adaptive-cat-1.preview.emergentagent.com; img-src 'self' data: blob:; script-src 'self'; style-src 'self' 'unsafe-inline'" always;
    
    # 4) DNS RESOLVER - For dynamic upstream DNS
    resolver 1.1.1.1 8.8.8.8 valid=300s ipv6=off;
    
    # 5) API REVERSE PROXY (MAIN HOTPATCH)
    location /api/ {
        # Kill switch check
        if ($hotpatch_off) { return 502; }
        
        # Rate limiting
        limit_req zone=api_rl burst=20 nodelay;
        
        # Upstream (HTTPS + SNI)
        proxy_pass https://adaptive-cat-1.preview.emergentagent.com$request_uri;
        proxy_http_version 1.1;
        proxy_set_header Host adaptive-cat-1.preview.emergentagent.com;
        proxy_ssl_server_name on;
        proxy_ssl_name adaptive-cat-1.preview.emergentagent.com;

        # Forward client context
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Timeouts (planner/summarizer can be slower)
        proxy_connect_timeout 30s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;

        # Handle preflight requests
        if ($request_method = OPTIONS) { return 204; }
    }
    
    # 6) CACHE HEADERS - CRA best practice
    # Never cache app shell
    location = /index.html { 
        add_header Cache-Control "no-cache, must-revalidate"; 
        try_files $uri /index.html; 
    }
    
    # Long cache for hashed assets
    location ~* \.(?:js|css|woff2?)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }
    
    # 7) SERVICE WORKER KILL (temporary - remove after 24h)
    location = /service-worker.js {
        add_header Cache-Control "no-store";
        return 200 '';
    }
    
    # 8) DEDICATED API LOG (monitoring)
    log_format api '$remote_addr - $request_method $request '
                   'up=$upstream_status rt=$upstream_response_time '
                   'st=$status bytes=$body_bytes_sent ref="$http_referer" ua="$http_user_agent"';
    access_log /var/log/nginx/api_access.log api;
    
    # Your existing location blocks for static files...
}